// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Drive.h"
#include "OI.h"

#define DEADBAND .05
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

Drive::Drive(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
float Drive::Deadband(float input){
	float ret;
	if (abs(input) <= DEADBAND) ret = 0;
	else if (input > DEADBAND) ret = ((input - DEADBAND) * (input - DEADBAND));
	else if (input < DEADBAND) ret = (- (input + DEADBAND) * (input + DEADBAND));
	return ret;
}
// Called just before this Command runs the first time
void Drive::Initialize() {
	RobotMap::driveTrainDriveTalonBackLeft->Set(0);
	RobotMap::driveTrainDriveTalonBackRight->Set(0);
	RobotMap::driveTrainDriveTalonMidLeft->Set(0);
	RobotMap::driveTrainDriveTalonMidRight->Set(0);
	RobotMap::driveTrainDriveTalonFrontLeft->Set(0);
	RobotMap::driveTrainDriveTalonFrontRight->Set(0);
}

// Called repeatedly when this Command is scheduled to run
void Drive::Execute() {

	float leftStickY = Drive::Deadband(Robot::oi->getLeftDriveStick()->GetY());
	float rightStickY = Drive::Deadband(Robot::oi->getRightDriveStick()->GetY());

	RobotMap::driveTrainDriveTalonBackLeft->Set(leftStickY);
	RobotMap::driveTrainDriveTalonMidLeft->Set(leftStickY);
	RobotMap::driveTrainDriveTalonFrontLeft->Set(leftStickY);

	RobotMap::driveTrainDriveTalonBackRight->Set(rightStickY);
	RobotMap::driveTrainDriveTalonMidRight->Set(rightStickY);
	RobotMap::driveTrainDriveTalonFrontRight->Set(rightStickY);

}

// Make this return true when this Command no longer needs to run execute()
bool Drive::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void Drive::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void Drive::Interrupted() {

}
