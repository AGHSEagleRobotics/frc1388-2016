// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "VisionDrive.h"
#define PROPORTION_CONSTANT .01//proportional constant for slowing down as we get to the goal
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

VisionDrive::VisionDrive(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void VisionDrive::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void VisionDrive::Execute() {
	visi.AnalyzeParticle();
	distance = visi.getDistance();
	float motorPower = distance * PROPORTION_CONSTANT;
	if(motorPower > 1){
		motorPower = 1;
	}
	RobotMap::driveTrainRobotDrive41->TankDrive(motorPower, motorPower);
}

// Make this return true when this Command no longer needs to run execute()
bool VisionDrive::IsFinished() {
	if(distance < 36){
		return true;
	}
    return false;
}

// Called once after isFinished returns true
void VisionDrive::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void VisionDrive::Interrupted() {

}
